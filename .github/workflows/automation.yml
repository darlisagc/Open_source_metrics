name: Generate Monthly GitHub Metrics

on:
  schedule:
    - cron: "59 23 28 * *"  # Runsat 11:59 PM on the 28th day of each month, including February
  workflow_dispatch:  # Allows manual triggering

jobs:
  collect_metrics:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: |
          pip install requests pandas tabulate beautifulsoup4 lxml

      - name: Determine Last Day of Month
        run: |
          TOMORROW_MONTH=$(date -d "tomorrow" +%m)
          CURRENT_MONTH=$(date +%m)
          if [ "$TOMORROW_MONTH" != "$CURRENT_MONTH" ]; then
            echo "Running script for last day of the month."
          else
            echo "Not the last day of the month. Exiting."
            exit 0
          fi

      - name: Run GitHub Metrics Script
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: python github_metrics.py

      - name: Commit and Push Markdown Report
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add open_source_metrics.md open_source_metrics_data.csv
          git add metrics_history.json
          git commit --allow-empty -m "Updated Open Source Metrics for $(date +'%Y-%m-%d')"

          # Fetch and merge the latest changes from the remote main branch
          git fetch origin main
          git merge origin/main

          # Now push your changes
          git push https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
